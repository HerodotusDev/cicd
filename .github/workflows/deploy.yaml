name: Deploy version

on:
  workflow_call:

inputs:
  version:
    required: yes
    
env:
  version_file: ./package.json  
  inputs_files: ./k8s/cicd-inputs.yaml
  rollout_timeout: 450 

permissions:
  contents: write

jobs:

  guard:
    runs-on: ubuntu-latest
    steps:
      - uses: HerodotusDev/cicd/.github/actions/guard-branch@main
  define-matrix:
    runs-on: hero-arc-runners
    needs: [guard]
    outputs:
      matrix_apps: ${{ steps.define-matrix.outputs.matrix_apps }}
    steps:
      - name: Checkout Caller Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Load App Names
        id: load-app-names
        uses: HerodotusDev/cicd/.github/actions/load-inputs@main
        with:
          inputs_file: ${{env.inputs_files}}

      - name: Define apps matrix
        id: define-matrix
        run: |
          echo 'matrix_apps=${{ env.app_names }}' >> "$GITHUB_OUTPUT"

  deploy:
    needs: [define-matrix, guard]
    runs-on: hero-arc-runners
    strategy:
      matrix:
        app: ${{ fromJson(needs.define-matrix.outputs.matrix_apps) }}
    if: always()
    outputs:
      config_changed: ${{ steps.pull_config.outputs.config_changed }}
    steps:
      - name: Checkout Caller Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Load Inputs from YAML
        id: load-inputs
        uses: HerodotusDev/cicd/.github/actions/load-inputs@feat/env_standards
        with:
          inputs_file: ${{env.inputs_files}}

      - name: Deploy to Kubernetes
        uses: HerodotusDev/cicd/.github/actions/deploy-to-k8s@feat/env_standards
        with:
          namespace: ${{ env.namespace }}
          deployment_file: ./k8s/${{ env.k8s_env }}/${{ matrix.app }}-deployment.yaml
          ingress_file: ./k8s/${{ env.k8s_env }}/${{ matrix.app }}-ingress.yaml
          rollout_timeout: ${{ env.rollout_timeout }}
          image_tag: ${{ needs.version.outputs.version }}
          dockerhub_project: ${{ env.dockerhub_project }}
          app_name: ${{ matrix.app }}
          config_changed: ${{ steps.pull_config.outputs.config_changed }}
