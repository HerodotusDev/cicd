name: 'Fetch ETCD Config and Create Secret'
description: 'Fetch configuration from an external ETCD instance and create a Kubernetes Secret'

inputs:
  etcd_host:
    description: 'ETCD endpoint'
    required: false
    default: https://config.api.herodotus.cloud:2379
  etcd_user:
    description: 'ETCD username'
    required: true
  etcd_password:
    description: 'ETCD password'
    required: true
  etcd_key:
    description: 'ETCD key to fetch'
    required: true
  namespace:
    description: 'Kubernetes namespace for the Secret'
    required: false
    default: 'default'
  app_name:
    description: 'Application name'
    required: true
  kube_config:
    description: 'Kubeconfig content'
    required: true

runs:
  using: "composite"
  steps:
    - name: Pull and Run Secret Preparation Container
      run: |
        docker run --rm \
          -e ETCD_HOST="${{ inputs.ETCD_HOST }}" \
          -e ETCD_USER="${{ inputs.ETCD_USER }}" \
          -e ETCD_PASSWORD="${{ inputs.ETCD_PASSWORD }}" \
          -e ETCD_KEY="${{ inputs.ETCD_KEY }}" \
          -e APP_NAME="${{ inputs.app_name }}" \
          -e NAMESPACE="${{ inputs.namespace }}" \
          -v ${{ github.workspace }}/output:/output \
          dataprocessor/etcd-pull:0.2
      shell: bash

    - name: Change Ownership of Output Files
      run: sudo chown -R $(whoami):$(whoami) ${{ github.workspace }}/output
      shell: bash

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: "v1.32.0"

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ inputs.KUBE_CONFIG }}" > ~/.kube/config
        chmod 600 ~/.kube/config
      shell: bash

    - name: Apply Kubernetes Secret
      run: kubectl apply -f ${{ github.workspace }}/output/secret.yaml            
      shell: bash

    - name: Compute Secret Checksum
      id: secret_checksum
      shell: bash
      run: |
        CHECKSUM=$(sha256sum "${{ github.workspace }}/output/secret.yaml" | awk '{print $1}')
        echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT      

    - name: Patch Deployment to Restart
      shell: bash
      run: |
        kubectl patch deployment ${{ inputs.app_name }} \
          -n ${{ inputs.namespace }} \
          -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"secret-checksum\":\"${{ steps.secret_checksum.outputs.checksum }}\"}}}}}"
