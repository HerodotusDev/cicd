name: "Extract Version"
description: "Extracts the version from a specified file using yq."

inputs:
  file:
    description: "The file containing the version."
    required: false 

outputs:
  version:
    description: "The extracted version."
    value: ${{ steps.extract_version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Extract Version
      id: extract_version
      shell: bash
      run: |
        FILE="${{ inputs.file }}"

        if [ ! -f "$FILE" ]; then
          echo "File not found: $FILE"
          exit 1
        fi

        case "$FILE" in
          *.toml) TOOL="toml" ;;
          *.json) TOOL="jq" ;;
          *)
            echo "Unsupported file type: $FILE"
            exit 1
            ;;
        esac

        # Install jq if missing (needed only for JSON)
        if [ "$TOOL" = "jq" ]; then
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
        fi

        # Extract version correctly
        if [ "$TOOL" = "toml" ]; then
          VERSION=$(
            grep -E '^\s*version\s*=' "$FILE" \
              | head -n1 \
              | sed -E 's/^\s*version\s*=\s*"([^"]+)".*/\1/'
          )
        elif [ "$TOOL" = "jq" ]; then
          VERSION=$(jq -r '.version' "$FILE")
        fi

        if [ -z "$VERSION" ]; then
          echo "Version not found in $FILE."
          exit 1
        fi

        # Correct way to output variables in composite action
        echo "version=$VERSION" >> $GITHUB_OUTPUT
