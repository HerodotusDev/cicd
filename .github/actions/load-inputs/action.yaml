name: "Load Inputs as Environment Variables"
description: "Reads a YAML file and sets key-value pairs as environment variables; emits normalized app metadata."

inputs:
  inputs_file:
    description: "Path to the YAML file containing inputs"
    required: true
    default: "workflow-inputs.yaml"

outputs:
  app_names:
    description: "The app_names value from the inputs file"
    value: ${{ steps.parse-inputs.outputs.app_names }}
  app_matrix:
    description: "Normalized app metadata derived from app_names"
    value: ${{ steps.parse-inputs.outputs.app_matrix }}

runs:
  using: "composite"
  steps:
    - name: Load Inputs and Set Environment Variables
      id: parse-inputs
      shell: bash
      env:
        INPUTS_FILE: ${{ inputs.inputs_file }}
      run: |
        set -euo pipefail

        if [ ! -f "$INPUTS_FILE" ]; then
          echo "❌ Error: File $INPUTS_FILE not found!"
          exit 1
        fi

        python3 "${GITHUB_ACTION_PATH}/load_inputs.py" \
          --inputs-file "$INPUTS_FILE" \
          --env "$GITHUB_ENV" \
          --output "$GITHUB_OUTPUT"
    - name: Overwrite envs
      shell: bash
      run: |
        if [ "${GITHUB_REF_NAME}" = "gcp-develop" ] || [ "${GITHUB_REF_NAME}" = "develop" ]; then
          echo "namespace=stg-${{env.namespace}}" >> $GITHUB_ENV
          echo "k8s_env=stg" >> $GITHUB_ENV
        elif [ "${GITHUB_REF_NAME}" = "gcp-main" ] || [ "${GITHUB_REF_NAME}" = "main" ]; then
          echo "namespace=prod-${namespace}" >> $GITHUB_ENV
          echo "k8s_env=prod" >> $GITHUB_ENV
        fi

        repo_name=$(basename "$GITHUB_REPOSITORY")
        echo "repo_name=$repo_name" >> $GITHUB_ENV
