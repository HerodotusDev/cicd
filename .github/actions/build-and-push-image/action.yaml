---
name: "Build and Push Docker Image"
description: "Checks out code, sets up Buildx, logs in to Docker, and builds & pushes a Docker image."
inputs:
  dockerhub_project:
    description: "The Docker Hub project (or organization/repository prefix) (e.g. myorg)"
    required: true
  app_name:
    description: "The application name to form the image name."
    required: true
  version:
    description: "Version tag to use (e.g. from a previous job output)."
    required: true
  dockerfile:
    description: "Path to the Dockerfile."
    required: true
    default: "./docker/dockerfile"
  docker_username:
    description: "Dockerhub login"
    required: true   
  docker_password:
    description: "Dockerhub login"
    required: true    
  docker_builder:
    description: "Dockerhub builder"
    required: true  
    default: dataprocessor/github
  context:
    description: "Build context directory."
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4


    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}      

    - name: Set image 
      shell: bash
      run: echo "IMAGE=${{ inputs.dockerhub_project}}/${{ inputs.app_name}}" >> $GITHUB_ENV        

    - name: Check if Docker image exists
      id: check_image
      shell: bash
      
      run: |
        image="${{ env.IMAGE }}:${{ inputs.version }}"
        if docker manifest inspect "$image" >/dev/null 2>&1; then
          echo "Docker image '$image' exists."
          echo "image_exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "Docker image '$image' does not exist. Proceeding to build."
          echo "image_exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: ${{ steps.check_image.outputs.image_exists == 'false' }}
      with:
        driver: cloud
        endpoint: "dataprocessor/github"
        install: true

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      if: ${{ steps.check_image.outputs.image_exists == 'false' }}
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        network: host
        tags: |
          ${{ env.IMAGE }}:latest
          ${{ env.IMAGE }}:${{ inputs.version }}
        build-args: |
          APP_NAME=app-${{ inputs.app_name }}