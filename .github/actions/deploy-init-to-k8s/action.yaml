# .github/actions/k8s-deploy/action.yml
name: "Deploy init pod on K8s"
description: "Deploys Kubernetes resources using kubectl."
inputs:
  service_account_token:
    description: "Service account token for Kubernetes authentication."
    required: true
  cluster_url:
    description: "Kubernetes API server URL."
    required: true
  namespace:
    description: "Kubernetes namespace to deploy to."
    required: true
  deployment_file:
    description: "Path to the deployment YAML file."
    required: true
  ingress_file:
    description: "Path to the ingress YAML file."
    required: true
  rollout_timeout:
    description: "Rollout timeout for the deployment (e.g., 500s)."
    required: false
    default: "500"
  image_tag:
    description: "Image tag to deployed."
    required: true
    default: latest
  dockerhub_project:
    description: "The Docker Hub project (or organization/repository prefix) (e.g. myorg)"
    required: true
  app_name:
    description: "The application name to form the image name."
    required: true    
  secret_changed:
    description: "Whether the secret has changed and deployment needs restart"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: "v1.32.0"

    - name: Update deployment YAML with image tag
      run: |
        sed -i "s|<IMAGE>|${{ env.dockerhub_project }}/${{ matrix.app }}:${{ needs.version.outputs.version }}|g" "./k8s/${{ env.k8s_env }}/${{ matrix.app }}-pod.yaml"
      shell: bash
        
    - name: Delete pod if it exists
      shell: bash
      run: |
        POD="${{ matrix.app }}"
        if kubectl get pod "$POD" -n "${{ env.namespace }}" | grep -q&> /dev/null; then
          echo "Deleting pod $POD"
          kubectl delete pod "$POD" -n "${{ env.namespace }}" 
        else
          echo "Pod $POD not found, skipping."
        fi

    - name: Deploy Deployment YAML (if exists)
      run: |
        if [ -f "./k8s/${{ env.k8s_env }}/${{ matrix.app }}-pod.yaml" ]; then
          echo "Deployment file exists. Applying manifest..."
          kubectl apply --namespace "${{ env.namespace }}" -f "./k8s/${{ env.k8s_env }}/${{ matrix.app }}-pod.yaml"
        else
          echo "No Deployment file found. Skipping deployment."
        fi
      shell: bash   

    - name: Wait for Pod to complete
      run: |
        kubectl wait \
          --for=jsonpath='{.status.phase}'=Succeeded \
          pod/${{ matrix.app}} \
          --namespace "${{ env.namespace }}" \
          --timeout=${{ env.rollout_timeout }}s
      shell: bash
                